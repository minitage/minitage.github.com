
Welcome to Minitage's documentation!
************************************


What is minitage
================

Minitage is all about deployment and projects packaging

* Why should i use minitage?
  * Minitage leitmotivs
  * A professional tool
* Minitage, the meta-package manager
  * Purpose
  * Pre requisite knowledge
  * Variables used in this documentation
  * Minitage, the origins
* Specifications
  * The package manager in 7 points
  * The minilays
  * The minibuilds
  * The installation layout

How do i use it
===============

* Installation
* Minitage in the daily use of a developer
  * The minitage swiss knife, **minimerge**
  * Beginning a project with minitage: The Initial Steps
  * Porting an exising buildout based project to be a good minitage
    citizen
  * Installation with a python 2.5
  * A plone3 project with relstorage (postgresql) and varnish2 support
  * Install a project with a CAS server wired on an OpenLDAP backend
  * FAQ
* Minitage and paster templates
  * Minitage and projects templates
    * paster is your friend
    * Listing the available templates
    * Generating a minitage project from a paster template
  * Available projects
    * The minitage buildout recipes
    * Dependency project
    * Python based projet
    * Plone 2.5
    * Zope2
    * Plone 3
    * Zope 3
    * Pylons projects
    * Django projects
  * Minitage and instances
    * Abstract
    * Basic layout
    * Listing the available instances
    * Installing a instance
  * Available instances
    * minitage.instances.env
    * minitage.instances.postgresql
    * minitage.instances.varnish
    * minitage.instances.varnish2
    * minitage.instances.paste-initd
    * minitage.instances.mysql
    * minitage.instances.cas

How can i contribute to its development
=======================================

* Develop
  * Tools for developers
  * Installing the development version of minitage