{"body": "<div class=\"section\" id=\"about\">\n<h1>About<a class=\"headerlink\" href=\"#about\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<div class=\"section\" id=\"purpose\">\n<h2>Purpose<a class=\"headerlink\" href=\"#purpose\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<blockquote>\n<ul class=\"simple\">\n<li>Minitage is a meta packages manager.</li>\n<li>It&#8217;s goal is to integrate build systems / other package manager together to make them install in a &#8216;well known&#8217; layout.</li>\n<li>In other terms, it install its stuff in &#8216;prefix&#8217; and it targets the total isolation from the host system.</li>\n<li>Moreover, this tool will make you forget compilation and other crazy stuff that put your mind away from your real project needs.</li>\n<li>Another subsidiary goal is to standardize installations, and make development environments as similar as possible with production deployments</li>\n<li>With all the precedings targets achieved, minitage would be called a good <tt class=\"docutils literal\"><span class=\"pre\">industrialization</span> <span class=\"pre\">tool</span></tt> :)</li>\n</ul>\n</blockquote>\n</div>\n<div class=\"section\" id=\"pre-requisite-knowledge\">\n<h2>Pre requisite knowledge<a class=\"headerlink\" href=\"#pre-requisite-knowledge\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<blockquote>\n<ul class=\"simple\">\n<li>Read carefully this documentation: <a class=\"reference external\" href=\"http://plone.org/documentation/tutorial/buildout\">http://plone.org/documentation/tutorial/buildout</a>.</li>\n<li>And this one can be good too: <a class=\"reference external\" href=\"http://pypi.python.org/pypi/zc.buildout\">http://pypi.python.org/pypi/zc.buildout</a></li>\n<li>It is essential for you to know the basics of buildout to use it.</li>\n<li>It is not necessary for you to test it because you will do the practise part just after ;).</li>\n</ul>\n</blockquote>\n</div>\n<div class=\"section\" id=\"variables-used-in-this-documentation\">\n<h2>Variables used in this documentation<a class=\"headerlink\" href=\"#variables-used-in-this-documentation\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<blockquote>\n<ul class=\"simple\">\n<li><tt class=\"docutils literal\"><span class=\"pre\">$project</span></tt> -&gt; your project name</li>\n<li><tt class=\"docutils literal\"><span class=\"pre\">$bd</span></tt> -&gt; buildout directory</li>\n<li><tt class=\"docutils literal\"><span class=\"pre\">$mt</span></tt> -&gt; minitage root path</li>\n<li><tt class=\"docutils literal\"><span class=\"pre\">$url</span></tt> -&gt; the url of your versioned project</li>\n</ul>\n</blockquote>\n</div>\n<div class=\"section\" id=\"minitage-the-origins\">\n<h2>Minitage, the origins<a class=\"headerlink\" href=\"#minitage-the-origins\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<div class=\"section\" id=\"buildout-limits\">\n<h3>Buildout Limits<a class=\"headerlink\" href=\"#buildout-limits\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>First of all, do not buy a gun before using buildout\nBuildout is not a magical tool and we just had quite a lot of drawbacks :</p>\n<blockquote>\n<ul class=\"simple\">\n<li>Today offline mode can be problematic</li>\n<li>If you change your python, take a coffee.</li>\n<li>1GB per project, it s too much.</li>\n<li>Buildout behaviour can be hard to predict even more if the configuration file is huge.</li>\n</ul>\n</blockquote>\n</div>\n<div class=\"section\" id=\"the-idea\">\n<h3>The Idea<a class=\"headerlink\" href=\"#the-idea\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<blockquote>\n<ul class=\"simple\">\n<li>The idea is to write a light and simple package manager from scratch which will allow us to integrate various build systems.</li>\n<li>What about shell scripts, buildout or makefiles interact together to assemble all the parts of our project parts?</li>\n<li>To allow this, the approach is to share a common &#8216;well known&#8217; layout to install things in minitage.</li>\n</ul>\n</blockquote>\n</div>\n<div class=\"section\" id=\"implementation-goals\">\n<h3>Implementation goals<a class=\"headerlink\" href=\"#implementation-goals\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<blockquote>\n<ul>\n<li><p class=\"first\">Write just small specialized buildouts.</p>\n</li>\n<li><p class=\"first\">Reuse with svn:externals or others (mercurial forest extension, package manager fetching methods)</p>\n</li>\n<li><p class=\"first\">Centralize and re-use dependencies among projects.</p>\n</li>\n<li><p class=\"first\">Use different ways to install, One tool for one thing, remember the Unix way.</p>\n</li>\n<li><p class=\"first\">Deploy a project from start to end.</p>\n</li>\n<li><p class=\"first\">Isolate all the needed boilerplate from the host system. All stuff in minitage is supposed to be independant from the host base system. Compiled stuff is interlinked as much as possible.</p>\n</li>\n<li><p class=\"first\">Reproduce the same environement everywhere (on UNIX platforms). It will probably work on</p>\n<blockquote>\n<ul class=\"simple\">\n<li>Linux</li>\n<li>MacOSX but at least OSX Leopard is required. (it has worked, but not tested recently)</li>\n<li>FreeBSD (it has worked, but not tested recently)</li>\n</ul>\n</blockquote>\n</li>\n</ul>\n</blockquote>\n</div>\n</div>\n</div>\n", "display_toc": true, "title": "About", "sourcename": "about.txt", "customsidebar": null, "current_page_name": "about", "next": {"link": "../spec/", "title": "Specifications"}, "rellinks": [["genindex", "General Index", "I", "index"], ["spec", "Specifications", "N", "next"], ["why", "Why should i use minitage?", "P", "previous"]], "meta": {}, "parents": [], "sidebars": ["searchbox.html", "globaltoc.html"], "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">About</a><ul>\n<li><a class=\"reference internal\" href=\"#purpose\">Purpose</a></li>\n<li><a class=\"reference internal\" href=\"#pre-requisite-knowledge\">Pre requisite knowledge</a></li>\n<li><a class=\"reference internal\" href=\"#variables-used-in-this-documentation\">Variables used in this documentation</a></li>\n<li><a class=\"reference internal\" href=\"#minitage-the-origins\">Minitage, the origins</a><ul>\n<li><a class=\"reference internal\" href=\"#buildout-limits\">Buildout Limits</a></li>\n<li><a class=\"reference internal\" href=\"#the-idea\">The Idea</a></li>\n<li><a class=\"reference internal\" href=\"#implementation-goals\">Implementation goals</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n", "prev": {"link": "../why/", "title": "Why should i use minitage?"}, "metatags": ""}