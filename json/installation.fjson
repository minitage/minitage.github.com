{"body": "<div class=\"section\" id=\"installation\">\n<h1>Installation<a class=\"headerlink\" href=\"#installation\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<div class=\"section\" id=\"variables\">\n<h2>Variables<a class=\"headerlink\" href=\"#variables\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<blockquote>\n<ul class=\"simple\">\n<li><tt class=\"docutils literal\"><span class=\"pre\">$prefix</span></tt>: root of minitage</li>\n<li><tt class=\"docutils literal\"><span class=\"pre\">$ins</span></tt>: root of a project inside minitage</li>\n</ul>\n</blockquote>\n</div>\n<div class=\"section\" id=\"buildout-configuration\">\n<h2>Buildout Configuration<a class=\"headerlink\" href=\"#buildout-configuration\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p><strong>To store all downloaded stuff in the same place</strong>, you ll need to set buildout to do so.</p>\n<blockquote>\n<div class=\"highlight-sh\"><div class=\"highlight\"><pre>mkdir -p ~/.buildout/downloads\ncat <span class=\"s\">&lt;&lt; EOF &gt; ~/.buildout/default.cfg</span>\n<span class=\"s\">[buildout]</span>\n<span class=\"s\">download-directory = $HOME/.buildout/downloads</span>\n<span class=\"s\">download-cache = $HOME/.buildout/downloads</span>\n<span class=\"s\">EOF</span>\n</pre></div>\n</div>\n</blockquote>\n</div>\n<div class=\"section\" id=\"system-requirements\">\n<h2>System Requirements<a class=\"headerlink\" href=\"#system-requirements\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Minitage requires a complete toolchain to build softwares from the c compiler to the autotools.</p>\n<p>if you need something that must be compiled, you must have some requirements installed like :</p>\n<blockquote>\n<ul>\n<li><p class=\"first\">m4</p>\n</li>\n<li><p class=\"first\">A c compiler (gcc ?)</p>\n</li>\n<li><p class=\"first\">pkg-config</p>\n</li>\n<li><p class=\"first\">autotools</p>\n<blockquote>\n<ul class=\"simple\">\n<li>automake</li>\n<li>autoconf</li>\n</ul>\n</blockquote>\n</li>\n<li><p class=\"first\">libtool if your platform supports it</p>\n</li>\n<li><p class=\"first\">groff</p>\n</li>\n<li><p class=\"first\">man-db, man utils,  whatever your system core man packages are</p>\n</li>\n</ul>\n</blockquote>\n<div class=\"section\" id=\"debian-ubuntu\">\n<h3>Debian/Ubuntu<a class=\"headerlink\" href=\"#debian-ubuntu\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<blockquote>\n<p>Prior to begin with the project, ensure those dependencies are installed on your system :</p>\n<ul>\n<li><p class=\"first\">m4</p>\n</li>\n<li><p class=\"first\">build-essential</p>\n</li>\n<li><p class=\"first\">pkg-config</p>\n</li>\n<li><p class=\"first\">automake</p>\n</li>\n<li><p class=\"first\">libtool</p>\n</li>\n<li><p class=\"first\">autoconf</p>\n<blockquote>\n<div class=\"highlight-sh\"><div class=\"highlight\"><pre>apt-get install build-essential m4 libtool pkg-config autoconf gettext bzip2 groff man-db automake libsigc++-2.0-dev tcl8.4\nor\napt-get install build-essential m4 libtool pkg-config autoconf gettext bzip2 groff man-db automake libsigc++-2.0-dev tcl8.5\n</pre></div>\n</div>\n</blockquote>\n</li>\n</ul>\n</blockquote>\n</div>\n<div class=\"section\" id=\"freebsd\">\n<h3>FreeBSD<a class=\"headerlink\" href=\"#freebsd\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<blockquote>\n<ul>\n<li><p class=\"first\">gmake</p>\n</li>\n<li><p class=\"first\">gsed</p>\n<blockquote>\n<div class=\"highlight-sh\"><div class=\"highlight\"><pre><span class=\"nb\">cd</span> /usr/ports/sysutils/portinstall\nmake install clean\n<span class=\"k\">for </span>i in gsed gmake autotools autoconf;do portinstall <span class=\"nv\">$i</span>;<span class=\"k\">done</span>\n</pre></div>\n</div>\n</blockquote>\n</li>\n</ul>\n</blockquote>\n</div>\n<div class=\"section\" id=\"gentoo\">\n<h3>Gentoo<a class=\"headerlink\" href=\"#gentoo\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<blockquote>\nGentoo is perfect by default, no requirement.</blockquote>\n</div>\n<div class=\"section\" id=\"suze\">\n<h3>Suze<a class=\"headerlink\" href=\"#suze\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<blockquote>\n<p>Prior to begin with the project, ensure those dependencies are installed on\nyour system:</p>\n<ul class=\"simple\">\n<li>toolchain (gcc, autotools, m4)</li>\n</ul>\n</blockquote>\n</div>\n<div class=\"section\" id=\"fedora\">\n<h3>Fedora<a class=\"headerlink\" href=\"#fedora\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<blockquote>\n<p>Prior to begin with the project, ensure those dependencies are installed on\nyour system:</p>\n<p>This one liner can help you</p>\n<blockquote>\n<div class=\"highlight-sh\"><div class=\"highlight\"><pre>yum install automake autoconf libtool wget gcc-c++ patch\n</pre></div>\n</div>\n</blockquote>\n</blockquote>\n</div>\n<div class=\"section\" id=\"macos-x\">\n<h3>MacOS X<a class=\"headerlink\" href=\"#macos-x\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<blockquote>\n<p>Before starting with the project, be sure that these dependencies are installed via macports (<a class=\"reference external\" href=\"http://macports.org\">http://macports.org</a>) on your system :</p>\n<blockquote>\n<ul class=\"simple\">\n<li><a class=\"reference external\" href=\"http://trac.macports.org/projects/macports/browser/trunk/dports/archivers/bzip2/Portfile\">bzip2</a></li>\n<li><a class=\"reference external\" href=\"http://trac.macports.org/projects/macports/browser/trunk/dports/archivers/gnutar/Portfile\">gnu tar (gtar)</a></li>\n<li><a class=\"reference external\" href=\"http://trac.macports.org/projects/macports/browser/trunk/dports/archivers/unzip/Portfile\">unzip</a></li>\n<li><a class=\"reference external\" href=\"http://trac.macports.org/projects/macports/browser/trunk/dports/devel/binutils/Portfile\">binutils</a></li>\n<li><a class=\"reference external\" href=\"http://trac.macports.org/projects/macports/browser/trunk/dports/textproc/gsed/Portfile\">sed (gsed)</a></li>\n<li><a class=\"reference external\" href=\"http://trac.macports.org/projects/macports/browser/trunk/dports/devel/gmake/Portfile\">gnu make (gmake)</a></li>\n<li><a class=\"reference external\" href=\"http://trac.macports.org/projects/macports/browser/trunk/dports/devel/autoconf/Portfile\">autoconf</a></li>\n<li><a class=\"reference external\" href=\"http://trac.macports.org/projects/macports/browser/trunk/dports/devel/automake/Portfile\">automake</a></li>\n<li><a class=\"reference external\" href=\"http://trac.macports.org/projects/macports/browser/trunk/dports/devel/m4/Portfile\">m4</a></li>\n</ul>\n</blockquote>\n<p>Do not forget to update your bash profile to take your installed ports into account</p>\n<blockquote>\n<div class=\"highlight-sh\"><div class=\"highlight\"><pre><span class=\"c\"># put this line into ~/.bashrc and ~/.bash_profile</span>\n<span class=\"nb\">export </span><span class=\"nv\">PATH</span><span class=\"o\">=</span>/opt/local/bin:/opt/local/sbin:<span class=\"nv\">$PATH</span>\n</pre></div>\n</div>\n</blockquote>\n</blockquote>\n</div>\n</div>\n<div class=\"section\" id=\"python\">\n<h2>Python<a class=\"headerlink\" href=\"#python\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<div class=\"section\" id=\"existing-python\">\n<h3>Existing python<a class=\"headerlink\" href=\"#existing-python\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<blockquote>\n<p>You need a python with distribute, zlib, bz2 and ssl support.</p>\n<p>Try that in your interpretery</p>\n<blockquote>\n<div class=\"highlight-python\"><div class=\"highlight\"><pre><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">tarfile</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">zipfile</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">bz2</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">_ssl</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">zlib</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">setuptools</span>\n<span class=\"go\">&gt;&gt;&gt;</span>\n</pre></div>\n</div>\n</blockquote>\n</blockquote>\n<p>Tip:\nIf you do not want to use a custom compiled python, be sure to have installed python with it&#8217;s &#8220;dev&#8221; packages and with distribute and virtualenv.\nOn Debian systems, for example, you can use the following snippet:</p>\n<div class=\"highlight-python\"><pre>apt-get install python-dev python</pre>\n</div>\n</div>\n<div class=\"section\" id=\"pybootstrapper\">\n<h3>PyBootstrapper<a class=\"headerlink\" href=\"#pybootstrapper\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<div class=\"section\" id=\"goal\">\n<h4>Goal<a class=\"headerlink\" href=\"#goal\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<p>This utility deploys for you a nicely python with all its dependencies in a prefix of your choice.</p>\n<p>This script will install for you:</p>\n<blockquote>\n<ul>\n<li><p class=\"first\">Python-2.5.2 (default) or Python-2.4.5</p>\n</li>\n<li><p class=\"first\">openssl 0.9.7</p>\n</li>\n<li><p class=\"first\">zlib-1.2.3</p>\n</li>\n<li><p class=\"first\">bzip2-1.0.4</p>\n</li>\n<li><p class=\"first\">ncurses-5.6</p>\n</li>\n<li><p class=\"first\">readlines-5.2</p>\n</li>\n<li><p class=\"first\">ez_setup.py which will install those python packages:</p>\n<blockquote>\n<ul class=\"simple\">\n<li>distribute</li>\n<li>zc.buildout</li>\n<li>PasteScripts</li>\n<li>virtualenv</li>\n</ul>\n</blockquote>\n</li>\n</ul>\n</blockquote>\n</div>\n<div class=\"section\" id=\"id1\">\n<h4>Variables<a class=\"headerlink\" href=\"#id1\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<ul>\n<li><p class=\"first\">We will use some variables to refer to well known places and scripts.</p>\n</li>\n<li><p class=\"first\">Just adjust the following code to fit to your needs and type it in your current shell/</p>\n<blockquote>\n<div class=\"highlight-sh\"><div class=\"highlight\"><pre><span class=\"nb\">export </span><span class=\"nv\">prefix</span><span class=\"o\">=</span><span class=\"nv\">$HOME</span>/minitage\n<span class=\"nb\">export </span><span class=\"nv\">python</span><span class=\"o\">=</span><span class=\"nv\">$HOME</span>/tools/python\n</pre></div>\n</div>\n</blockquote>\n</li>\n</ul>\n</div>\n<div class=\"section\" id=\"usage\">\n<h4>Usage<a class=\"headerlink\" href=\"#usage\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<ul>\n<li><p class=\"first\">Please use a FULL path with this script!</p>\n<blockquote>\n<div class=\"highlight-sh\"><div class=\"highlight\"><pre>mkdir -p <span class=\"nv\">$python</span>\n<span class=\"nb\">cd</span> <span class=\"nv\">$python</span>\nwget http://git.minitage.org/git/minitage/shell/plain/PyBootstrapper.sh\nbash ./PyBootstrapper.sh <span class=\"nv\">$python</span>\n</pre></div>\n</div>\n</blockquote>\n</li>\n</ul>\n</div>\n<div class=\"section\" id=\"offline-mode\">\n<h4>offline mode<a class=\"headerlink\" href=\"#offline-mode\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<ul>\n<li><p class=\"first\">Please use a FULL path with this script!</p>\n</li>\n<li><p class=\"first\">You can use it in offline mode but put the archives in your <cite>$python/downloads</cite> eg:</p>\n<blockquote>\n<div class=\"highlight-sh\"><div class=\"highlight\"><pre>ln -s /prod/1.0/downloads  <span class=\"nv\">$python</span>/downloads\nbash ./PyBootstrapper.sh  -o <span class=\"nv\">$python</span>\n</pre></div>\n</div>\n</blockquote>\n</li>\n</ul>\n</div>\n</div>\n</div>\n<div class=\"section\" id=\"using-virtualenv\">\n<h2>Using virtualenv<a class=\"headerlink\" href=\"#using-virtualenv\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p><strong>You have to use</strong> <a class=\"reference external\" href=\"http://pypi.python.org/pypi/virtualenv\">virtualenv</a>,\nminitage fits well with it and requires now <em>distribute</em> to run.</p>\n<p>virtualenv is a tool that allow you to create isolated Python\nenvironments.</p>\n<ul>\n<li><p class=\"first\">!!!  <em>PIP</em> IS NOT SUPPORTED !!!</p>\n<blockquote>\n<p>Here is how to set up an environment with it:</p>\n<ul>\n<li><p class=\"first\"><strong>Only if you do not have used the bootstrap script</strong>, you must install virtualenv:</p>\n<div class=\"highlight-python\"><pre># maybe sudo ?\nwget  http://python-distribute.org/distribute_setup.py\npython distribute_setup.py\neasy_install -U virtualenv # remove also any other virtualenv installation</pre>\n</div>\n</li>\n<li><p class=\"first\">Install the minitage prefix, this is just a new virtualenv creation:</p>\n<div class=\"highlight-python\"><pre>$python/bin/virtualenv --no-site-packages --distribute $prefix\n# maybe that if you do not used the bootstrapper\n# virtualenv --no-site-packages --distribute $prefix</pre>\n</div>\n</li>\n<li><p class=\"first\">activate it:</p>\n<div class=\"highlight-python\"><pre>source $prefix/bin/activate</pre>\n</div>\n</li>\n</ul>\n<p><strong>KEEP IN MIND THAT YOU MUST ACTIVATE VIRTUALENV AT ANY TIME YOU USE IT.</strong></p>\n</blockquote>\n</li>\n</ul>\n</div>\n<div class=\"section\" id=\"installing-minitage\">\n<h2>Installing minitage<a class=\"headerlink\" href=\"#installing-minitage\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<div class=\"section\" id=\"a-stable-version\">\n<h3>A stable version<a class=\"headerlink\" href=\"#a-stable-version\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<blockquote>\n<p>Minitage is a classical python egg, you can get it throught easy_install (DISTRIBUTE).</p>\n<p>To install minitage in a stable version, follow those steps:</p>\n<ul>\n<li><p class=\"first\">!!!  <em>PIP</em> IS NOT SUPPORTED !!!</p>\n</li>\n<li><p class=\"first\">Install minitage</p>\n<blockquote>\n<div class=\"highlight-sh\"><div class=\"highlight\"><pre><span class=\"nb\">source</span> <span class=\"nv\">$prefix</span>/bin/activate\neasy_install -U minitage.core\n</pre></div>\n</div>\n</blockquote>\n</li>\n<li><p class=\"first\">Sync its packages (all its minilays in minitage terminology).</p>\n<p><strong>This will initiate also all the minitage directories for the first run.</strong></p>\n<blockquote>\n<div class=\"highlight-sh\"><div class=\"highlight\"><pre><span class=\"nb\">source</span> <span class=\"nv\">$prefix</span>/bin/activate\nminimerge -s\n</pre></div>\n</div>\n</blockquote>\n</li>\n</ul>\n</blockquote>\n</div>\n</div>\n<div class=\"section\" id=\"using-minitage\">\n<h2>Using minitage<a class=\"headerlink\" href=\"#using-minitage\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Those are usage samples... You have not to run that if you do not need to ;)</p>\n<div class=\"section\" id=\"install-python-xxx\">\n<h3>Install python-xxx<a class=\"headerlink\" href=\"#install-python-xxx\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<blockquote>\n<div class=\"highlight-sh\"><div class=\"highlight\"><pre><span class=\"nb\">source</span> <span class=\"nv\">$prefix</span>/bin/activate\nminimerge python-xxx\n</pre></div>\n</div>\n</blockquote>\n</div>\n<div class=\"section\" id=\"install-a-custom-minilay\">\n<h3>Install a custom minilay<a class=\"headerlink\" href=\"#install-a-custom-minilay\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<blockquote>\n<div class=\"highlight-sh\"><div class=\"highlight\"><pre><span class=\"c\"># get the project minilay</span>\n<span class=\"c\"># minitage is aware of the MINILAYS environnment variable, you can use it to specify space separated minlays</span>\nscm CHECKOUT  https://subversion.foo.net/YOURPROJECT/minilay/trunk <span class=\"nv\">$prefix</span>/minilays/YOURPROJECTMINILAY\n</pre></div>\n</div>\n</blockquote>\n</div>\n<div class=\"section\" id=\"deploy-a-project-with-minitage\">\n<h3>Deploy a project with minitage<a class=\"headerlink\" href=\"#deploy-a-project-with-minitage\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<blockquote>\n<div class=\"highlight-sh\"><div class=\"highlight\"><pre><span class=\"c\"># get the project minilay</span>\n<span class=\"c\"># minitage is aware of the MINILAYS environnment variable, you can use it to specify space separated minlays</span>\nscm CHECKOUT  https://subversion.foo.net/YOURPROJECT/minilay/trunk <span class=\"nv\">$prefix</span>/minilays/YOURPROJECTMINILAY\n<span class=\"c\"># minimerging it</span>\n<span class=\"nb\">source</span> <span class=\"nv\">$prefix</span>/bin/activate\nminimerge project\n</pre></div>\n</div>\n</blockquote>\n</div>\n</div>\n<div class=\"section\" id=\"extra-options-and-usage\">\n<h2>Extra options and usage<a class=\"headerlink\" href=\"#extra-options-and-usage\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<blockquote>\n<div class=\"highlight-sh\"><div class=\"highlight\"><pre><span class=\"nb\">source</span> <span class=\"nv\">$prefix</span>/bin/activate\nminimerge  --help\n</pre></div>\n</div>\n</blockquote>\n</div>\n</div>\n", "display_toc": true, "title": "Installation", "sourcename": "installation.txt", "customsidebar": null, "current_page_name": "installation", "next": {"link": "../usecases/", "title": "Minitage in the daily use of a developer"}, "rellinks": [["genindex", "General Index", "I", "index"], ["usecases/index", "Minitage in the daily use of a developer", "N", "next"], ["spec", "Specifications", "P", "previous"]], "meta": {}, "parents": [], "sidebars": ["searchbox.html", "globaltoc.html"], "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Installation</a><ul>\n<li><a class=\"reference internal\" href=\"#variables\">Variables</a></li>\n<li><a class=\"reference internal\" href=\"#buildout-configuration\">Buildout Configuration</a></li>\n<li><a class=\"reference internal\" href=\"#system-requirements\">System Requirements</a><ul>\n<li><a class=\"reference internal\" href=\"#debian-ubuntu\">Debian/Ubuntu</a></li>\n<li><a class=\"reference internal\" href=\"#freebsd\">FreeBSD</a></li>\n<li><a class=\"reference internal\" href=\"#gentoo\">Gentoo</a></li>\n<li><a class=\"reference internal\" href=\"#suze\">Suze</a></li>\n<li><a class=\"reference internal\" href=\"#fedora\">Fedora</a></li>\n<li><a class=\"reference internal\" href=\"#macos-x\">MacOS X</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#python\">Python</a><ul>\n<li><a class=\"reference internal\" href=\"#existing-python\">Existing python</a></li>\n<li><a class=\"reference internal\" href=\"#pybootstrapper\">PyBootstrapper</a><ul>\n<li><a class=\"reference internal\" href=\"#goal\">Goal</a></li>\n<li><a class=\"reference internal\" href=\"#id1\">Variables</a></li>\n<li><a class=\"reference internal\" href=\"#usage\">Usage</a></li>\n<li><a class=\"reference internal\" href=\"#offline-mode\">offline mode</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#using-virtualenv\">Using virtualenv</a></li>\n<li><a class=\"reference internal\" href=\"#installing-minitage\">Installing minitage</a><ul>\n<li><a class=\"reference internal\" href=\"#a-stable-version\">A stable version</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#using-minitage\">Using minitage</a><ul>\n<li><a class=\"reference internal\" href=\"#install-python-xxx\">Install python-xxx</a></li>\n<li><a class=\"reference internal\" href=\"#install-a-custom-minilay\">Install a custom minilay</a></li>\n<li><a class=\"reference internal\" href=\"#deploy-a-project-with-minitage\">Deploy a project with minitage</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#extra-options-and-usage\">Extra options and usage</a></li>\n</ul>\n</li>\n</ul>\n", "prev": {"link": "../spec/", "title": "Specifications"}, "metatags": ""}